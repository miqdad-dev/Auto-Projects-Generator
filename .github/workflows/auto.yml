name: Auto Generate Projects

concurrency:
  group: auto-generate-projects
  cancel-in-progress: false

on:
  schedule:
    - cron: "0 9 * * *"       # daily at 09:00 UTC
  workflow_dispatch:
    inputs:
      domain:
        description: "Domain override"
        required: false
        type: choice
        options:
          - frontend
          - backend
          - data engineering
          - data science/ml
          - algorithms/systems
          - game dev 2d
          - game dev 3d
      seed:
        description: "Sampling seed"
        required: false
        type: string

jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup Node (for JS tests)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack (Yarn/pnpm)
        run: corepack enable

      - name: Setup Java (for enterprise backends)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate next project
        env:
          PROVIDER: ${{ vars.PROVIDER || 'openai' }}
          MODEL_NAME: ${{ vars.MODEL_NAME || 'gpt-4o' }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GH_PAT: ${{ secrets.GH_PAT }}
          GITHUB_OWNER: miqdad-dev
          GITHUB_VISIBILITY: ${{ vars.GITHUB_VISIBILITY || 'public' }}
          ENABLE_DATA_FETCH: ${{ vars.ENABLE_DATA_FETCH || '1' }}
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
          # Diversity controls
          TEMP: ${{ vars.TEMP || '0.9' }}
          PRESENCE_PENALTY: ${{ vars.PRESENCE_PENALTY || '0.6' }}
          FREQUENCY_PENALTY: ${{ vars.FREQUENCY_PENALTY || '0.4' }}
          MAX_REROLLS: ${{ vars.MAX_REROLLS || '3' }}
          SIMILARITY_THRESHOLD: ${{ vars.SIMILARITY_THRESHOLD || '0.75' }}
          # On-demand overrides
          DOMAIN_OVERRIDE: ${{ inputs.domain }}
          SEED: ${{ inputs.seed }}
        run: |
          python scripts/generate_next.py

      - name: Commit dashboard updates
        shell: bash
        run: |
          set -euo pipefail
          if ! git diff --quiet -- docs; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"

            # Make sure we are up to date before committing
            git fetch origin
            git pull --rebase origin main || true

            git add docs
            git commit -m "chore(dashboard): update projects list" || echo "No changes to commit"

            # Try normal push
            if git push origin HEAD:main; then
              echo "Pushed dashboard changes."
            else
              echo "Non-fast-forward push rejected. Attempting rebase/merge and re-push..."
              # Attempt rebase
              git fetch origin
              if git rebase origin/main; then
                git push origin HEAD:main && exit 0
              fi
              # If rebase fails, abort and try a merge
              git rebase --abort || true
              git merge --no-edit origin/main || true
              if git push origin HEAD:main; then
                exit 0
              fi
              # As a last resort: restage only docs changes atop remote main without forcing
              echo "Retry by re-staging docs on top of origin/main"
              git fetch origin
              git reset --mixed origin/main
              git add docs
              git commit -m "chore(dashboard): update projects list (restaged)" || true
              git push origin HEAD:main
            fi
          else
            echo "No dashboard changes."
          fi
      
